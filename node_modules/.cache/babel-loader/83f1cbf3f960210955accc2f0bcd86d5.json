{"ast":null,"code":"import { ADD_CONTACT, DELETE_CONTACT, EDIT_CONTACT } from \"./constants\";\nimport { combineReducers } from \"redux\";\nconst INIT_CONTACT_STATE = {\n  contacts: []\n};\n\nconst ContactReducer = (state = INIT_CONTACT_STATE, action) => {\n  let todos = [...state.todos];\n\n  switch (action.type) {\n    case ADD_CONTACT:\n      todos.push(action.p);\n      return { ...state,\n        contacts: [...state.contacts, action.payload]\n      };\n\n    case DELETE_CONTACT:\n      return { ...state,\n        contacts: [...state.contacts, action.payload]\n      };\n\n    case EDIT_CONTACT:\n      return { ...state,\n        contacts: [...state.contacts, action.payload]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  contact: ContactReducer\n});","map":{"version":3,"sources":["/Users/birdperson888/Desktop/bootcamp/chapter_10/Jamilya_contactBook_Redux/src/redux/reducer.js"],"names":["ADD_CONTACT","DELETE_CONTACT","EDIT_CONTACT","combineReducers","INIT_CONTACT_STATE","contacts","ContactReducer","state","action","todos","type","push","p","payload","contact"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,EAAsCC,YAAtC,QAA0D,aAA1D;AACA,SAASC,eAAT,QAAgC,OAAhC;AAEA,MAAMC,kBAAkB,GAAC;AACvBC,EAAAA,QAAQ,EAAC;AADc,CAAzB;;AAIA,MAAMC,cAAc,GAAC,CAACC,KAAK,GAACH,kBAAP,EAA0BI,MAA1B,KAAmC;AACtD,MAAIC,KAAK,GAAG,CAAC,GAAGF,KAAK,CAACE,KAAV,CAAZ;;AACA,UAAQD,MAAM,CAACE,IAAf;AACE,SAAKV,WAAL;AACES,MAAAA,KAAK,CAACE,IAAN,CAAWH,MAAM,CAACI,CAAlB;AACA,aAAO,EACL,GAAGL,KADE;AAELF,QAAAA,QAAQ,EAAC,CACP,GAAGE,KAAK,CAACF,QADF,EAEPG,MAAM,CAACK,OAFA;AAFJ,OAAP;;AAOF,SAAKZ,cAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELF,QAAAA,QAAQ,EAAC,CACP,GAAGE,KAAK,CAACF,QADF,EAEPG,MAAM,CAACK,OAFA;AAFJ,OAAP;;AAOF,SAAKX,YAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELF,QAAAA,QAAQ,EAAC,CACP,GAAGE,KAAK,CAACF,QADF,EAEPG,MAAM,CAACK,OAFA;AAFJ,OAAP;;AAOF;AACE,aAAON,KAAP;AA3BJ;AA6BD,CA/BD;;AAiCA,eAAeJ,eAAe,CAAC;AAC7BW,EAAAA,OAAO,EAAER;AADoB,CAAD,CAA9B","sourcesContent":["import { ADD_CONTACT, DELETE_CONTACT, EDIT_CONTACT } from \"./constants\"\nimport { combineReducers } from \"redux\";\n\nconst INIT_CONTACT_STATE={\n  contacts:[],\n}\n\nconst ContactReducer=(state=INIT_CONTACT_STATE,action)=>{\n  let todos = [...state.todos]\n  switch (action.type){\n    case ADD_CONTACT:\n      todos.push(action.p)\n      return {\n        ...state,\n        contacts:[\n          ...state.contacts,\n          action.payload\n        ]\n      };\n    case DELETE_CONTACT:\n      return {\n        ...state,\n        contacts:[\n          ...state.contacts,\n          action.payload\n        ]\n      };\n    case EDIT_CONTACT:\n      return {\n        ...state,\n        contacts:[\n          ...state.contacts,\n          action.payload\n        ]\n      };\n    default:\n      return state      \n  }\n}\n\nexport default combineReducers({\n  contact: ContactReducer\n})"]},"metadata":{},"sourceType":"module"}