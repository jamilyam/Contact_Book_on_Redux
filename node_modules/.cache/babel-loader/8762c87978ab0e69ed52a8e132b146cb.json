{"ast":null,"code":"import { ADD_CONTACT, DELETE_CONTACT, EDIT_CONTACT } from \"./constants\";\nimport { combineReducers } from \"redux\";\nconst INIT_CONTACT_STATE = {\n  contacts: []\n};\n\nconst ContactReducer = (state = INIT_CONTACT_STATE, action) => {\n  let contacts = [...state.contacts];\n\n  switch (action.type) {\n    case ADD_CONTACT:\n      todos.push(action.payload);\n      return { ...state,\n        contacts\n      };\n\n    case DELETE_CONTACT:\n      contacts = contacts.filter(item => item.id !== action.payload);\n      return { ...state,\n        contacts\n      };\n\n    case EDIT_CONTACT:\n      contacts = contacts.map(item => {\n        item.id === action.payload.id ? action.payload : item;\n      });\n      return { ...state,\n        contacts\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  contact: ContactReducer\n});","map":{"version":3,"sources":["/Users/birdperson888/Desktop/bootcamp/chapter_10/Jamilya_contactBook_Redux/src/redux/reducer.js"],"names":["ADD_CONTACT","DELETE_CONTACT","EDIT_CONTACT","combineReducers","INIT_CONTACT_STATE","contacts","ContactReducer","state","action","type","todos","push","payload","filter","item","id","map","contact"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,EAAsCC,YAAtC,QAA0D,aAA1D;AACA,SAASC,eAAT,QAAgC,OAAhC;AAEA,MAAMC,kBAAkB,GAAC;AACvBC,EAAAA,QAAQ,EAAC;AADc,CAAzB;;AAIA,MAAMC,cAAc,GAAC,CAACC,KAAK,GAACH,kBAAP,EAA0BI,MAA1B,KAAmC;AACtD,MAAIH,QAAQ,GAAG,CAAC,GAAGE,KAAK,CAACF,QAAV,CAAf;;AACA,UAAQG,MAAM,CAACC,IAAf;AACE,SAAKT,WAAL;AACEU,MAAAA,KAAK,CAACC,IAAN,CAAWH,MAAM,CAACI,OAAlB;AACA,aAAO,EACL,GAAGL,KADE;AAELF,QAAAA;AAFK,OAAP;;AAIF,SAAKJ,cAAL;AACEI,MAAAA,QAAQ,GAAGA,QAAQ,CAACQ,MAAT,CAAgBC,IAAI,IAAEA,IAAI,CAACC,EAAL,KAAUP,MAAM,CAACI,OAAvC,CAAX;AACA,aAAO,EACL,GAAGL,KADE;AAELF,QAAAA;AAFK,OAAP;;AAIF,SAAKH,YAAL;AACEG,MAAAA,QAAQ,GAAGA,QAAQ,CAACW,GAAT,CAAaF,IAAI,IAAE;AAC3BA,QAAAA,IAAI,CAACC,EAAL,KAAUP,MAAM,CAACI,OAAP,CAAeG,EAA1B,GAAgCP,MAAM,CAACI,OAAvC,GAAiDE,IAAjD;AACD,OAFU,CAAX;AAGA,aAAO,EACL,GAAGP,KADE;AAELF,QAAAA;AAFK,OAAP;;AAIF;AACE,aAAOE,KAAP;AAtBJ;AAwBD,CA1BD;;AA4BA,eAAeJ,eAAe,CAAC;AAC7Bc,EAAAA,OAAO,EAAEX;AADoB,CAAD,CAA9B","sourcesContent":["import { ADD_CONTACT, DELETE_CONTACT, EDIT_CONTACT } from \"./constants\"\nimport { combineReducers } from \"redux\";\n\nconst INIT_CONTACT_STATE={\n  contacts:[],\n}\n\nconst ContactReducer=(state=INIT_CONTACT_STATE,action)=>{\n  let contacts = [...state.contacts]\n  switch (action.type){\n    case ADD_CONTACT:\n      todos.push(action.payload)\n      return {\n        ...state,\n        contacts\n      };\n    case DELETE_CONTACT:\n      contacts = contacts.filter(item=>item.id!==action.payload);\n      return {\n        ...state,\n        contacts\n      };\n    case EDIT_CONTACT:\n      contacts = contacts.map(item=>{\n        (item.id===action.payload.id) ? action.payload : item\n      })\n      return {\n        ...state,\n        contacts\n      };\n    default:\n      return state      \n  }\n}\n\nexport default combineReducers({\n  contact: ContactReducer\n})"]},"metadata":{},"sourceType":"module"}